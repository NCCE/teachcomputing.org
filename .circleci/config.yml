version: 2.1

jobs:
  brakeman:
    docker:
      - image: 'cimg/ruby:2.7.2'
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Inspecting with Brakeman
          command: bundle exec brakeman

  rubocop:
    docker:
      - image: 'cimg/ruby:2.7.2'
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: Inspecting with Rubocop

  test:
    docker:
      - image: circleci/ruby:2.7.2-node-browsers
        environment:
          BUNDLE_JOBS: "3"
          BUNDLE_RETRY: "3"
          BUNDLE_PATH: vendor/bundle
          CREDENTIALS_ENV: test
          DB_HOST: 127.0.0.1
          PGHOST: 127.0.0.1
          PGUSER: ncce_test
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: ncce_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: Which bundler?
          command: bundle -v

      - restore_cache:
          keys:
            - ncce-bundle-v2-{{ checksum "Gemfile.lock" }}

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          key: ncce-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Install Dependencies
          command: yarn install --immutable

      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec
          command: |
            mkdir ~/rspec
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml

      - store_test_results:
          path: ~/rspec

      - store_artifacts:
          path: coverage

      - store_artifacts:
          path: tmp/screenshots

      - run:
          name: Post test coverage to Github
          command: bash -ue .circleci/record_coverage
          when: always

orbs:
  ruby: circleci/ruby@1

workflows:
  code_quality:
    jobs:
      - brakeman:
          filters:
            branches:
              ignore:
                - master
                - main
      - rubocop:
          filters:
            branches:
              ignore:
                - master
                - main

  test:
    jobs:
      - test
